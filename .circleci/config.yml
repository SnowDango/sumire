version: 2.1

orbs:
  android: circleci/android@2.5.0
  gh: circleci/github-cli@2.3.0
  github-app-token: ostk0069/github-app-token@0.0.1

parameters:
  target-branch:
    description: "PR先のbranch"
    type: string
    default: ""
  pr-number:
    description: "PRの番号"
    type: integer
    default: 0

jobs:
  save-screenshot:
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - checkout
      - run:
          name: chmod gradlew
          command: |
            chmod +x gradlew
      - run:
          name: take screenshot
          command: |
            ./gradlew recordRoborazziDebug --stacktrace
      - store_artifacts:
          path: app/build/outputs/roborazzi
  vrt-test:
    parameters:
      target-branch:
        type: string
        default: ""
    executor:
      name: android/android-machine
      resource-class: large
      tag: default
    steps:
      - checkout
      - run:
          name: get artifacts
          command: |
            mkdir -p app/build/outputs/roborazzi | \
            curl -H "Circle-Token: $CIRCLE_TOKEN" "https://circleci.com/api/v1.1/project/github/SnowDango/sumire/latest/artifacts?branch=<<parameters.target-branch>>&filter=completed" | \
            jq -c '.[]' | while read artifact; do
              curl -H "Circle-Token: $CIRCLE_TOKEN" -L "$(echo $artifact | jq -r '.url')?circle-token=$CIRCLE_TOKEN" --output "$(echo $artifact | jq -r '.path')"
            done
      - run:
          name: chmod gradlew
          command: |
            chmod +x gradlew
      - run:
          name: compare screenshot
          command: |
            ./gradlew compareRoborazziDebug --stacktrace
      - run:
          name: delete unnecessary files
          command: |
            find app/build/outputs/roborazzi -mindepth 1 -maxdepth 1 ! -name '*_compare.png' -exec rm -r {} +
      - store_artifacts:
          path: app/build/outputs/roborazzi
      - run:
          name: create result json file
          command: |
            curl -H "Circle-Token: $CIRCLE_TOKEN" "https://circleci.com/api/v2/project/github/SnowDango/sumire/$CIRCLE_BUILD_NUM/artifacts" --output artifact.json
            cat artifact.json
      - persist_to_workspace:
          root: ./
          paths:
            - artifact.json
      - run:
          name: create branch
          command: |
            git push origin --delete vrt_$CIRCLE_BRANCH || true
            git checkout --orphan vrt_$CIRCLE_BRANCH
      - run:
          name: push compare file
          command: |
            git rm --cached -rf .
            git add -f ./app/build/outputs/roborazzi/
            echo -e "version: 2.1\njobs:\n no-op:\n  machine: true\n  steps:\n  - run: no-op\nworkflows:\n build:\n  jobs:\n   - no-op:\n      filters:\n       branches:\n        only: no-op" > .circleci/config.yml
            git add -f .circleci/config.yml
            git commit -m "Add screenshot"
            git clean -df
            git push origin HEAD:vrt_$CIRCLE_BRANCH -f
  result-comment:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - gh/install
      - attach_workspace:
          at: ./
      - run:
          name: create comment
          command: |
            touch comment.txt
            echo "VRT Result" > comment.txt
            echo "| image |" >> comment.txt
            echo "|-------|" >> comment.txt
            cat artifact.json | \
            jq -c '.items[]' | while read artifact; do
              echo "| ![](https://github.com/SnowDango/sumire/blob/vrt_$CIRCLE_BRANCH/$(echo $artifact | jq -r '.path')) |" >> comment.txt
            done
      - github-app-token/fetch-token:
          app_id: $GITHUB_APPS_ID
          base64_private_key: $GITHUB_APPS_PRIVATE_KEY
          installation_id: 54651436
      - run:
          name: pull request comment
          command: |
            echo "$GITHUB_APP_TOKEN" | gh auth login --with-token
            gh pr comment "$CIRCLE_PULL_REQUEST" -F comment.txt --edit-last
workflows:
  save-screenshot:
    jobs:
      - save-screenshot:
          filters:
            branches:
              only:
                - "develop"
                - "master"
  vrt-test:
    when:
      not:
        equal: [ "", << pipeline.parameters.target-branch >> ]
    jobs:
      - vrt-test:
          target-branch: << pipeline.parameters.target-branch >>
      - result-comment:
          requires:
            - vrt-test

